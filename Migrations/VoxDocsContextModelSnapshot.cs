// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VoxDocs.Data;

#nullable disable

namespace VoxDocs.Migrations
{
    [DbContext(typeof(VoxDocsContext))]
    partial class VoxDocsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VoxDocs.Models.DocumentoModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BlobName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescricaoArquivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdNomeEmpresa")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdPastaPrincipal")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdSubPasta")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("NivelPrioridade")
                        .HasColumnType("int");

                    b.Property<string>("NomeArquivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TamanhoDocumento")
                        .HasColumnType("bigint");

                    b.Property<string>("TokenAcesso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioCriacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdNomeEmpresa");

                    b.HasIndex("IdPastaPrincipal");

                    b.HasIndex("IdSubPasta");

                    b.ToTable("Documentos");
                });

            modelBuilder.Entity("VoxDocs.Models.EmpresasContratanteModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataExpiracao")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailEmpresa")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmpresaNome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("PlanoAtivo")
                        .HasColumnType("bit");

                    b.Property<Guid>("PlanoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PlanoId");

                    b.ToTable("EmpresasContratante");

                    b.HasData(
                        new
                        {
                            Id = new Guid("084498f8-c589-44e9-b804-38b00abca89a"),
                            DataCriacao = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DataExpiracao = new DateTime(2034, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailEmpresa = "VoxDocs@gmail.com",
                            EmpresaNome = "VoxDocs",
                            PlanoAtivo = true,
                            PlanoId = new Guid("0e8c6b83-49c1-403e-b70c-6fc8e0f09c7f")
                        });
                });

            modelBuilder.Entity("VoxDocs.Models.PagamentoAtivoModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataExpiracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataPagamento")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmpresaNome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetodoPagamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomePlanoPago")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("PastaPrincipalIds")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PlanoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.PrimitiveCollection<string>("UsuariosCriados")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ValorPago")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Pagamento");
                });

            modelBuilder.Entity("VoxDocs.Models.PastaPrincipalModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCriacao")
                        .HasMaxLength(100)
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NomePastaPrincipal")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("PastasPrincipais");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7f8ef49a-8833-4239-8189-2e1947fc8d8b"),
                            DataCriacao = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            EmpresaId = new Guid("084498f8-c589-44e9-b804-38b00abca89a"),
                            NomePastaPrincipal = "Principal"
                        });
                });

            modelBuilder.Entity("VoxDocs.Models.PlanosVoxDocsModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ArmazenamentoDisponivel")
                        .HasColumnType("int");

                    b.Property<string>("Descriçao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Descricao");

                    b.Property<int?>("Duracao")
                        .HasColumnType("int");

                    b.Property<int?>("LimiteAdmin")
                        .HasColumnType("int");

                    b.Property<int?>("LimiteUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Periodicidade")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("PlanosVoxDocs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f9b2f7e0-d938-4b4d-b256-38bbd6a9d4ef"),
                            ArmazenamentoDisponivel = 200,
                            Descriçao = "Plano com funcionalidades básicas",
                            Duracao = 0,
                            LimiteAdmin = 2,
                            LimiteUsuario = 5,
                            Nome = "Gratuito",
                            Periodicidade = "Ilimitado",
                            Preco = 0m
                        },
                        new
                        {
                            Id = new Guid("b40c1b56-6cc2-4988-b979-3b00c1dd8e1e"),
                            ArmazenamentoDisponivel = 2500,
                            Descriçao = "Plano completo com funcionalidades avançadas",
                            Duracao = 1,
                            LimiteAdmin = 999,
                            LimiteUsuario = 999,
                            Nome = "Premium",
                            Periodicidade = "Mensal",
                            Preco = 89.90m
                        },
                        new
                        {
                            Id = new Guid("7d7f02e7-44b5-4692-88a4-8c2b149b5059"),
                            ArmazenamentoDisponivel = 2700,
                            Descriçao = "Plano completo com 10% de desconto (6 meses)",
                            Duracao = 6,
                            LimiteAdmin = 999,
                            LimiteUsuario = 999,
                            Nome = "Premium Semestral",
                            Periodicidade = "Semestral",
                            Preco = 647.46m
                        },
                        new
                        {
                            Id = new Guid("0e8c6b83-49c1-403e-b70c-6fc8e0f09c7f"),
                            ArmazenamentoDisponivel = 3000,
                            Descriçao = "Plano completo com 10% de desconto (12 meses)",
                            Duracao = 12,
                            LimiteAdmin = 999,
                            LimiteUsuario = 999,
                            Nome = "Premium Anual",
                            Periodicidade = "Anual",
                            Preco = 1402.92m
                        });
                });

            modelBuilder.Entity("VoxDocs.Models.SubPastaModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomeSubPasta")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("PastaPrincipalId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PastaPrincipalId");

                    b.ToTable("SubPastas");
                });

            modelBuilder.Entity("VoxDocs.Models.UserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmpresaContratante")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LimiteAdmin")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("0");

                    b.Property<string>("LimiteUsuario")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("0");

                    b.Property<string>("PasswordResetToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PasswordResetTokenExpiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("PermissionAccount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanoPago")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UltimoLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("46155276-4424-43f7-8290-19d80a29952c"),
                            Ativo = true,
                            DataCriacao = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "suporte.admin@voxdocs.com",
                            EmpresaContratante = "VoxDocs",
                            LimiteAdmin = "9999",
                            LimiteUsuario = "9999",
                            PermissionAccount = "SuporteVoxDocsAdmin",
                            PlanoPago = "Premium",
                            Senha = "Admin@Vox123!",
                            Usuario = "SuporteVoxDocsAdmin"
                        },
                        new
                        {
                            Id = new Guid("7be07dc5-5c2d-40d1-a3b5-63d4b838620d"),
                            Ativo = true,
                            DataCriacao = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "suporte@voxdocs.com",
                            EmpresaContratante = "VoxDocs",
                            LimiteAdmin = "9999",
                            LimiteUsuario = "9999",
                            PermissionAccount = "SuporteVoxDocs",
                            PlanoPago = "Premium",
                            Senha = "Suporte@Vox456!",
                            Usuario = "SuporteVoxDocs"
                        });
                });

            modelBuilder.Entity("VoxDocs.Models.DocumentoModel", b =>
                {
                    b.HasOne("VoxDocs.Models.EmpresasContratanteModel", "Empresa")
                        .WithMany()
                        .HasForeignKey("IdNomeEmpresa")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("VoxDocs.Models.PastaPrincipalModel", "PastaPrincipal")
                        .WithMany()
                        .HasForeignKey("IdPastaPrincipal")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("VoxDocs.Models.SubPastaModel", "SubPasta")
                        .WithMany()
                        .HasForeignKey("IdSubPasta")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Empresa");

                    b.Navigation("PastaPrincipal");

                    b.Navigation("SubPasta");
                });

            modelBuilder.Entity("VoxDocs.Models.EmpresasContratanteModel", b =>
                {
                    b.HasOne("VoxDocs.Models.PlanosVoxDocsModel", "Plano")
                        .WithMany()
                        .HasForeignKey("PlanoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plano");
                });

            modelBuilder.Entity("VoxDocs.Models.PastaPrincipalModel", b =>
                {
                    b.HasOne("VoxDocs.Models.EmpresasContratanteModel", "Empresa")
                        .WithMany("PastasPrincipais")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("VoxDocs.Models.SubPastaModel", b =>
                {
                    b.HasOne("VoxDocs.Models.PastaPrincipalModel", "PastaPrincipal")
                        .WithMany("SubPastas")
                        .HasForeignKey("PastaPrincipalId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("PastaPrincipal");
                });

            modelBuilder.Entity("VoxDocs.Models.EmpresasContratanteModel", b =>
                {
                    b.Navigation("PastasPrincipais");
                });

            modelBuilder.Entity("VoxDocs.Models.PastaPrincipalModel", b =>
                {
                    b.Navigation("SubPastas");
                });
#pragma warning restore 612, 618
        }
    }
}
